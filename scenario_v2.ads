
with Ada.Real_Time; use Ada.Real_Time;
with devicesfss_v1; use devicesfss_v1;

package Scenario_V2 is

    ---------------------------------------------------------------------
    ------ Access time for devices
    ---------------------------------------------------------------------
    WCET_Distance: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_Light: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    
    WCET_Joystick: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_PilotPresence: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    WCET_PilotButton: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);
    
    WCET_Power: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(4);
    
    WCET_Speed: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(7);
    WCET_Altitude: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(18);

    WCET_Pitch: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(20);
    WCET_Roll: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(18);

    WCET_Display: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(15);
    WCET_Alarm: constant Ada.Real_Time.Time_Span := Ada.Real_Time.Milliseconds(5);

    ---------------------------------------------------------------------
    ------ SCENARIO ----------------------------------------------------- 
    ---------------------------------------------------------------------
    -- Initial_Altitude: Altitude_Samples_Type := 8000;
    
    ---------------------------------------------------------------------
    ------ DISTANCE OK---------------------------------------------------
    cantidad_datos_Distancia: constant := 200;
    type Indice_Secuencia_Distancia is mod cantidad_datos_Distancia;
    type tipo_Secuencia_Distancia is array (Indice_Secuencia_Distancia) of Distance_Samples_Type;

    Distance_Simulation: tipo_Secuencia_Distancia :=  -- next sample every 100ms.
            ( 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000,   -- 1s.
              3900, 3900, 3900, 3900, 3900, 3900, 3900, 3900, 3900, 3900,   -- 2s.
              5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800,   -- 3s.
              5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600,   -- 4s.
              5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000,   -- 5s.
              5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800,   -- 6s.
              5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600,   -- 7s.
              5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000,   -- 8s.
              5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800,   -- 9s.
              5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600,   -- 10s.
              5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000,   -- 11s.
              5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800,   -- 12s.
              5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600, 5700, 5800,   -- 13s.
              5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600,   -- 14s.
              5900, 6000, 5555, 5600, 5700, 5800, 5900, 6000, 5555, 5600,   -- 15s.
              4000, 3900, 3500, 3400, 3000, 2900, 2800, 2700, 2400, 2300,   -- 16s.
              2000, 1900, 1800, 1700, 1500, 1400, 1300, 1200, 1100, 1000,   -- 17s.
              1900, 1900, 1900, 1900, 1900, 1900, 1900, 1900, 1900, 1900,             -- 18s.
              320, 300, 280, 260, 240, 220, 200, 180, 160, 140,             -- 19s.
              120, 110, 100, 90, 80, 70, 60, 50, 40, 30);                   -- 20s.


                   
    ---------------------------------------------------------------------
    ------ LIGHT OK------------------------------------------------------

    cantidad_datos_Light: constant := 200;
    type Indice_Secuencia_Light is mod cantidad_datos_Light;
    type tipo_Secuencia_Light is array (Indice_Secuencia_Light) of Light_Samples_Type;

    Light_Intensity_Simulation: tipo_Secuencia_Light :=  -- 1 muestra cada 100ms.
                 ( 700,700,700,700,700, 700,700,700,700,700,   -- 1s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 2s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 3s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 4s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 5s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 6s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 7s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 8s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 9s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 10s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 11s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 12s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 13s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 14s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 15s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 16s.
                   400,400,400,400,400, 400,400,400,400,400,   -- 17s.
                   400,400,400,400,400, 400,400,400,400,400,   -- 18s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 19s.
                   700,700,700,700,700, 700,700,700,700,700);  -- 20s.
    ---------------------------------------------------------------------
    ------ JOYSTICK OK---------------------------------------------------

    cantidad_datos_Joystick: constant := 200;
    type Indice_Secuencia_Joystick is mod cantidad_datos_Joystick;
    type tipo_Secuencia_Joystick is array (Indice_Secuencia_Joystick) 
                                             of Joystick_Samples_Type;

    Joystick_Simulation: tipo_Secuencia_Joystick :=  -- 1 muestra cada 100ms.
                ((47, 0), (28, 15), (11, 30), (0, 47), (-11, 30),
                 (-28, 15), (-47, 0), (-28, -15), (-11, -30), (0, -47),  -- 1s

                 (11, -30), (28, -15), (47, 0), (28, 11), (11, 28),
                 (0, 47), (-15, 28), (-30, 15), (-47, 0), (-28, -15),  -- 2s

                 (-11, -28), (0, -47), (15, -30), (28, -11), (47, 0),
                 (47, 15), (30, 30), (15, 47), (0, 28), (-15, 11),  -- 3s

                 (-30, 0), (-47, -15), (-28, -30), (-11, -47), (0, -28),
                 (15, -15), (30, 0), (47, 11), (28, 30), (11, 47),  -- 4s

                 (0, 47), (-15, 30), (-28, 15), (-47, 0), (-30, -11),
                 (-15, -30), (0, -47), (15, -28), (30, -11), (47, 0),  -- 5s

                 (47, -15), (28, -28), (11, -47), (0, -30), (-15, -11),
                 (-30, 0), (-47, 15), (-28, 30), (-11, 47), (0, 30),  -- 6s

                 (15, 11), (28, 0), (47, -15), (30, -28), (11, -47),
                 (0, -28), (-15, -11), (-28, 0), (-47, 15), (-30, 28),  -- 7s

                 (-15, 47), (0, 47), (15, 30), (28, 15), (47, 0),
                 (28, -15), (15, -28), (0, -47), (-11, -30), (-28, -15),  -- 8s

                 (-47, 0), (-28, 15), (-11, 28), (0, 47), (11, 28),
                 (28, 15), (47, 0), (28, -15), (15, -28), (0, -47),  -- 9s

                 (-15, -28), (-30, -15), (-47, 0), (-28, 15), (-11, 28),
                 (0, 47), (15, 28), (28, 15), (47, 0), (30, -15),  -- 10s

                 (11, -30), (0, -47), (-15, -28), (-28, -15), (-47, 0),
                 (-30, 15), (-15, 28), (0, 47), (15, 28), (28, 15),  -- 11s

                 (47, 0), (30, -15), (11, -28), (0, -47), (-15, -28),
                 (-30, -15), (-47, 0), (-28, 15), (-11, 28), (0, 47),  -- 12s

                 (11, 30), (28, 15), (47, 0), (30, -15), (15, -30),
                 (0, -47), (-11, -28), (-28, -15), (-47, 0), (-28, 15),  -- 13s

                 (-11, 30), (0, 47), (15, 28), (30, 15), (47, 0),
                 (28, -15), (11, -30), (0, -47), (-15, -28), (-30, -15),  -- 14s

                 (-47, 0), (-28, 15), (-11, 28), (0, 47), (15, 28),
                 (30, 15), (47, 0), (28, -15), (15, -30), (0, -47),  -- 15s

                 (-11, -30), (-28, -15), (-47, 0), (-30, 15), (-11, 28),
                 (0, 47), (15, 28), (28, 15), (47, 0), (30, -15),  -- 16s

                 (11, -30), (0, -47), (-11, -28), (-28, -15), (-47, 0),
                 (-28, 15), (-11, 30), (0, 47), (11, 28), (30, 15),  -- 17s

                 (47, 0), (28, -15), (11, -30), (0, -47), (-15, -28),
                 (-28, -15), (-47, 0), (-28, 15), (-11, 28), (0, 47),  -- 18s

                 (11, 28), (28, 15), (47, 0), (30, -15), (15, -30),
                 (0, -47), (-11, -28), (-28, -15), (-47, 0), (-30, 15),  -- 19s

                 (-11, 30), (0, 47), (15, 28), (28, 15), (47, 0),
                 (28, -15), (11, -30), (0, -47), (-15, -28), (-30, -15));  -- 20s





                 
    ---------------------------------------------------------------------
    ------ POWER OK------------------------------------------------------
    cantidad_datos_Power: constant := 200;
    type Indice_Secuencia_Power is mod cantidad_datos_Power;
    type tipo_Secuencia_Power is array (Indice_Secuencia_Power) of Power_Samples_Type;

    Power_Simulation: tipo_Secuencia_Power :=  -- next sample every 100ms.
                 ( 800,800,800,800,800, 900,900,900,900,900,   -- 1s.
                   800,800,800,800,800, 800,800,900,900,800,   -- 2s.
                   800,800,800,800,800, 700,700,700,700,700,   -- 3s.
                   700,700,700,700,700, 700,700,700,700,700,   -- 4s.   disminucion
                   600,600,600,600,600, 600,600,600,600,600,   -- 5s.
                   900,900,900,900,900, 900,900,900,900,900,   -- 6s.   !! aumento brusco
                   900,900,900,900,900, 900,900,900,900,900,   -- 7s.
                   1000,1000,1000,1000,1000, 1000,1000,1000,1000,1000, -- 8s.  !!!! muy alta
                   1020,1020,1020,1020,1020, 1020,1020,1020,1020,1020, -- 9s.  !!!!
                   1020,1020,1020,1020,1020, 1020,1020,1020,1020,1020, -- 10s. !!!!
                   800,800,800,800,800, 800,800,800,800,800,   -- 11s.
                   800,800,800,800,800, 800,800,800,800,800,   -- 12s.
                   800,800,800,800,800, 800,800,800,800,800,   -- 13s.
                   800,800,800,800,800, 800,800,800,800,800,   -- 14s.
                   800,800,800,800,800, 800,800,800,800,800,   -- 15s.
                   900,900,900,900,900, 900,900,900,900,900,   -- 16s.
                   900,900,900,900,900, 900,700,500,400,300,   -- 17s.
                   150,100,100,100,100, 100,100,100,100,100,   -- 18s.  !!!! muy baja
                   110,110,110,110,103, 103,103,100,100,100,   -- 19s.  !!!!
                   900,900,800,800,800, 800,800,800,800,800 ); -- 20s.


    ---------------------------------------------------------------------
    ------ PILOT'S PRESENCE ---------------------------------------------

    cantidad_datos_PilotPresence: constant := 200;
    type Indice_Secuencia_PilotPresence is mod cantidad_datos_PilotPresence;
    type tipo_Secuencia_PilotPresence is array (Indice_Secuencia_PilotPresence) of PilotPresence_Samples_Type;

    PilotPresence_Simulation: tipo_Secuencia_PilotPresence :=  -- 1 muestra cada 100ms.
                 ( 1,1,1,1,1, 1,1,1,1,1,   -- 1s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 2s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 3s.
                   1,1,1,1,1, 1,1,0,1,0,   -- 4s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 5s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 6s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 7s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 8s. 
                   1,1,0,0,1, 1,1,1,1,1,   -- 9s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 10s.
                   1,1,1,0,1, 1,1,1,1,1,   -- 11s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 12s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 13s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 14s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 15s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 16s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 17s.
                   1,1,1,1,1, 1,1,1,1,1,   -- 18s. 
                   1,1,1,1,1, 1,1,1,1,1,   -- 19s.
                   1,1,1,1,1, 1,1,1,1,1);  -- 20s.                   
    ---------------------------------------------------------------------
    ------ PILOT'S BUTTON -----------------------------------------------

    cantidad_datos_PilotButton: constant := 200;
    type Indice_Secuencia_PilotButton is mod cantidad_datos_PilotButton;
    type tipo_Secuencia_PilotButton is array (Indice_Secuencia_PilotButton) of PilotButton_Samples_Type;

    PilotButton_Simulation: tipo_Secuencia_PilotButton :=  -- 1 muestra cada 100ms.
                 ( 0,0,0,0,0, 0,0,0,0,0,   -- 1s. 
                   0,0,0,0,0, 1,1,1,0,0,   -- 2s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 3s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 4s. 
                   1,1,1,1,0, 0,0,0,0,0,   -- 5s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 6s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 7s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 8s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 9s.
                   0,0,0,0,0, 0,0,0,0,0,  -- 10s.                   
                   0,0,0,0,0, 0,0,0,0,0,   -- 11s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 12s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 13s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 14s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 15s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 16s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 17s.
                   0,0,0,0,0, 0,0,0,0,0,   -- 18s. 
                   0,0,0,0,0, 0,0,0,0,0,   -- 19s.
                   0,0,0,0,0, 0,0,0,0,0);  -- 20s.
end Scenario_V2;



